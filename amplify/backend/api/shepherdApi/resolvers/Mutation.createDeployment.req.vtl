## [Start] Set the primary @key. **
#set( $modelObjectKey = {
  "id": $util.dynamodb.toDynamoDB($ctx.args.input.id),
  "lastDeploymentTimestamp#env": $util.dynamodb.toDynamoDB("${ctx.args.input.lastDeploymentTimestamp}#${ctx.args.input.env}")
} )
## [End] Set the primary @key. **
#if( $util.isNull($dynamodbNameOverrideMap) )
  #set( $dynamodbNameOverrideMap = {
  "lastDeploymentTimestamp#env": "lastDeploymentTimestampEnv"
} )
#else
  $util.qr($dynamodbNameOverrideMap.put("lastDeploymentTimestamp#env", "lastDeploymentTimestampEnv"))
#end
$util.qr($ctx.args.input.put("lastDeploymentTimestamp#env","${ctx.args.input.lastDeploymentTimestamp}#${ctx.args.input.env}"))
## [Start] Prepare DynamoDB PutItem Request. **
$util.qr($context.args.input.put("createdAt", $util.defaultIfNull($ctx.args.input.createdAt, $util.time.nowISO8601())))
$util.qr($context.args.input.put("updatedAt", $util.defaultIfNull($ctx.args.input.updatedAt, $util.time.nowISO8601())))
$util.qr($context.args.input.put("__typename", "Deployment"))
{
  "version": "2017-02-28",
  "operation": "PutItem",
  "key": #if( $modelObjectKey ) $util.toJson($modelObjectKey) #else {
  "id":   $util.dynamodb.toDynamoDBJson($util.defaultIfNullOrBlank($ctx.args.input.id, $util.autoId()))
} #end,
  "attributeValues": $util.dynamodb.toMapValuesJson($context.args.input),
  "condition": {
      "expression": "attribute_not_exists(#id)",
      "expressionNames": {
          "#id": "id"
    }
  }
}
## [End] Prepare DynamoDB PutItem Request. **